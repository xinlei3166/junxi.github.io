import{_ as s,c as i,o as a,ag as t}from"./chunks/framework.CgtRPpXH.js";const c=JSON.parse('{"title":"python中sys，os，time模块的使用（包括时间格式的各种转换）","description":"","frontmatter":{"title":"python中sys，os，time模块的使用（包括时间格式的各种转换）","tags":["Python","sys"],"categories":["Python"]},"headers":[],"relativePath":"blog/Python/python中sys，os，time模块的使用（包括时间格式的各种转换）.md","filePath":"blog/Python/python中sys，os，time模块的使用（包括时间格式的各种转换）.md","lastUpdated":1733335015000}'),h={name:"blog/Python/python中sys，os，time模块的使用（包括时间格式的各种转换）.md"},e=t(`<h2 id="sys模块" tabindex="-1">sys模块 <a class="header-anchor" href="#sys模块" aria-label="Permalink to &quot;sys模块&quot;">​</a></h2><h3 id="sys-argv-实现从程序外部向程序传递参数。" tabindex="-1">sys.argv: 实现从程序外部向程序传递参数。 <a class="header-anchor" href="#sys-argv-实现从程序外部向程序传递参数。" aria-label="Permalink to &quot;sys.argv: 实现从程序外部向程序传递参数。&quot;">​</a></h3><p>位置参数argv[0]代表py文件本身，运行方法 python xx.py 参数1，参数2 。。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.argv[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.argv[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.argv[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name, age</span></span></code></pre></div><h3 id="sys-getdefaultencoding-获取系统当前编码-一般默认为ascii。" tabindex="-1">sys.getdefaultencoding(): 获取系统当前编码，一般默认为ascii。 <a class="header-anchor" href="#sys-getdefaultencoding-获取系统当前编码-一般默认为ascii。" aria-label="Permalink to &quot;sys.getdefaultencoding(): 获取系统当前编码，一般默认为ascii。&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.getdefaultencoding()</span></span></code></pre></div><h3 id="sys-setdefaultencoding-设置系统默认编码" tabindex="-1">sys.setdefaultencoding(): 设置系统默认编码， <a class="header-anchor" href="#sys-setdefaultencoding-设置系统默认编码" aria-label="Permalink to &quot;sys.setdefaultencoding(): 设置系统默认编码，&quot;">​</a></h3><p>执行dir（sys）时不会看到这个方法，在解释器中执行不通过， 可以先执行reload(sys)，在执行 setdefaultencoding(&#39;utf8&#39;)， 此时将系统默认编码设置为utf8。（python2.7中可能需要这么做）</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sys)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sys.setdefaultencoding(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;utf8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="sys-path-获取指定模块搜索路径的字符串集合" tabindex="-1">sys.path: 获取指定模块搜索路径的字符串集合 <a class="header-anchor" href="#sys-path-获取指定模块搜索路径的字符串集合" aria-label="Permalink to &quot;sys.path: 获取指定模块搜索路径的字符串集合&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sys.path</span></span></code></pre></div><h3 id="sys-platform-获取当前系统平台。" tabindex="-1">sys.platform: 获取当前系统平台。 <a class="header-anchor" href="#sys-platform-获取当前系统平台。" aria-label="Permalink to &quot;sys.platform: 获取当前系统平台。&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.platform</span></span></code></pre></div><h3 id="sys-exit" tabindex="-1">sys.exit() <a class="header-anchor" href="#sys-exit" aria-label="Permalink to &quot;sys.exit()&quot;">​</a></h3><p>功能：执行到主程序末尾，解释器自动退出，但是如果需要中途退出程序， 可以调用sys.exit函数，带有一个可选的整数参数返回给调用它的程序， 表示你可以在主程序中捕获对sys.exit的调用。（0是正常退出，其他为异常）&#39;&#39;&#39;</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;第</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">次:&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i, i</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;第五次退出&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sys.exit(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="os模块" tabindex="-1">os模块 <a class="header-anchor" href="#os模块" aria-label="Permalink to &quot;os模块&quot;">​</a></h2><h3 id="_1-os-name-——判断现在正在实用的平台-windows-返回-nt-linux-返回-posix" tabindex="-1">1. os.name()——判断现在正在实用的平台，Windows 返回 ‘nt&#39;; Linux 返回’posix&#39; <a class="header-anchor" href="#_1-os-name-——判断现在正在实用的平台-windows-返回-nt-linux-返回-posix" aria-label="Permalink to &quot;1. os.name()——判断现在正在实用的平台，Windows 返回 ‘nt&#39;; Linux 返回’posix&#39;&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.name()</span></span></code></pre></div><h3 id="_2-os-getcwd-——得到当前工作的目录。" tabindex="-1">2. os.getcwd()——得到当前工作的目录。 <a class="header-anchor" href="#_2-os-getcwd-——得到当前工作的目录。" aria-label="Permalink to &quot;2. os.getcwd()——得到当前工作的目录。&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.getcwd()</span></span></code></pre></div><h3 id="_3-os-listdir-——指定所有目录下所有的文件和目录名。" tabindex="-1">3. os.listdir()——指定所有目录下所有的文件和目录名。 <a class="header-anchor" href="#_3-os-listdir-——指定所有目录下所有的文件和目录名。" aria-label="Permalink to &quot;3. os.listdir()——指定所有目录下所有的文件和目录名。&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.listdir(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_4-os-remove-——删除指定文件" tabindex="-1">4. os.remove()——删除指定文件 <a class="header-anchor" href="#_4-os-remove-——删除指定文件" aria-label="Permalink to &quot;4. os.remove()——删除指定文件&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.remove(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;aaa.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_5-os-rmdir-——删除指定目录" tabindex="-1">5. os.rmdir()——删除指定目录 <a class="header-anchor" href="#_5-os-rmdir-——删除指定目录" aria-label="Permalink to &quot;5. os.rmdir()——删除指定目录&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.rmdir(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;C://Users/xiaoxinsoso/Desktop/aaa&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_6-os-mkdir-——创建目录-注意-这样只能建立一层-要想递归建立可用-os-makedirs" tabindex="-1">6. os.mkdir()——创建目录,注意：这样只能建立一层，要想递归建立可用：os.makedirs() <a class="header-anchor" href="#_6-os-mkdir-——创建目录-注意-这样只能建立一层-要想递归建立可用-os-makedirs" aria-label="Permalink to &quot;6. os.mkdir()——创建目录,注意：这样只能建立一层，要想递归建立可用：os.makedirs()&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.makedirs(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;aaa/aaa&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_7-os-path-isfile-——判断指定对象是否为文件。是返回true-否则false" tabindex="-1">7. os.path.isfile()——判断指定对象是否为文件。是返回True, 否则False <a class="header-anchor" href="#_7-os-path-isfile-——判断指定对象是否为文件。是返回true-否则false" aria-label="Permalink to &quot;7. os.path.isfile()——判断指定对象是否为文件。是返回True, 否则False&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.isfile(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ccc.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.isfile(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;aaa&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_8-os-path-isdir-——判断指定对象是否为目录。是true-否则false。例" tabindex="-1">8. os.path.isdir()——判断指定对象是否为目录。是True, 否则False。例： <a class="header-anchor" href="#_8-os-path-isdir-——判断指定对象是否为目录。是true-否则false。例" aria-label="Permalink to &quot;8. os.path.isdir()——判断指定对象是否为目录。是True, 否则False。例：&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.isdir(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;aaa&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.isdir(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ccc.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_9-os-path-exists-——检验指定的对象是否存在。是true-否则false-例" tabindex="-1">9. os.path.exists()——检验指定的对象是否存在。是True, 否则False.例： <a class="header-anchor" href="#_9-os-path-exists-——检验指定的对象是否存在。是true-否则false-例" aria-label="Permalink to &quot;9. os.path.exists()——检验指定的对象是否存在。是True, 否则False.例：&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.exists(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bbb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.exists(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;aaa&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.exists(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ccc.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_10-os-path-split-——返回路径的目录和文件名。例" tabindex="-1">10. os.path.split()——返回路径的目录和文件名。例： <a class="header-anchor" href="#_10-os-path-split-——返回路径的目录和文件名。例" aria-label="Permalink to &quot;10. os.path.split()——返回路径的目录和文件名。例：&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;C://Users/xiaoxinsoso/Desktop/aaa/ccc.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_11-os-getcwd-——获得当前工作的目录" tabindex="-1">11. os.getcwd()——获得当前工作的目录 <a class="header-anchor" href="#_11-os-getcwd-——获得当前工作的目录" aria-label="Permalink to &quot;11. os.getcwd()——获得当前工作的目录&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.getcwd()</span></span></code></pre></div><h3 id="_12-os-system-——执行shell命令。" tabindex="-1">12. os.system()——执行shell命令。 <a class="header-anchor" href="#_12-os-system-——执行shell命令。" aria-label="Permalink to &quot;12. os.system()——执行shell命令。&quot;">​</a></h3><p>注意：此处运行shell命令时，如果要调用python之前的变量，可以用如下方式：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;var&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(var) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注意此处[]内得是 “字符串”</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.system(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;echo $var&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.system(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dir&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_13-os-chdir-——改变目录到指定目录" tabindex="-1">13. os.chdir()——改变目录到指定目录 <a class="header-anchor" href="#_13-os-chdir-——改变目录到指定目录" aria-label="Permalink to &quot;13. os.chdir()——改变目录到指定目录&quot;">​</a></h3><h3 id="_14-os-path-getsize-——获得文件的大小-如果为目录-返回0" tabindex="-1">14. os.path.getsize()——获得文件的大小，如果为目录，返回0 <a class="header-anchor" href="#_14-os-path-getsize-——获得文件的大小-如果为目录-返回0" aria-label="Permalink to &quot;14. os.path.getsize()——获得文件的大小，如果为目录，返回0&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.getsize(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ccc.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_15-os-path-abspath-——获得绝对路径。例" tabindex="-1">15. os.path.abspath()——获得绝对路径。例： <a class="header-anchor" href="#_15-os-path-abspath-——获得绝对路径。例" aria-label="Permalink to &quot;15. os.path.abspath()——获得绝对路径。例：&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.abspath(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_16-os-path-join-path-name-——连接目录和文件名。例" tabindex="-1">16. os.path.join(path, name)——连接目录和文件名。例： <a class="header-anchor" href="#_16-os-path-join-path-name-——连接目录和文件名。例" aria-label="Permalink to &quot;16. os.path.join(path, name)——连接目录和文件名。例：&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;c://user/xiaoxinsoso/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wenjian.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_17-os-path-basename-path-——返回文件名" tabindex="-1">17. os.path.basename(path)——返回文件名 <a class="header-anchor" href="#_17-os-path-basename-path-——返回文件名" aria-label="Permalink to &quot;17. os.path.basename(path)——返回文件名&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.basename(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ccc.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_18-os-path-dirname-path-——返回文件路径" tabindex="-1">18. os.path.dirname(path)——返回文件路径 <a class="header-anchor" href="#_18-os-path-dirname-path-——返回文件路径" aria-label="Permalink to &quot;18. os.path.dirname(path)——返回文件路径&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.dirname(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;C://Users/xiaoxinsoso/Desktop/aaa/ccc.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_19-获得程序所在的实际目录" tabindex="-1">19. 获得程序所在的实际目录 <a class="header-anchor" href="#_19-获得程序所在的实际目录" aria-label="Permalink to &quot;19. 获得程序所在的实际目录&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.realpath(sys.argv[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.split(os.path.realpath(sys.argv[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.split(os.path.realpath(sys.argv[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="time模块" tabindex="-1">time模块 <a class="header-anchor" href="#time模块" aria-label="Permalink to &quot;time模块&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ticks = time.time()</span></span>
<span class="line"><span>print &quot;当前时间戳为:&quot;, ticks</span></span></code></pre></div><h3 id="获取当前时间" tabindex="-1">获取当前时间 <a class="header-anchor" href="#获取当前时间" aria-label="Permalink to &quot;获取当前时间&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localtime </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.localtime(time.time())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;本地时间为 :&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, localtime</span></span></code></pre></div><h3 id="获取格式化的时间" tabindex="-1">获取格式化的时间 <a class="header-anchor" href="#获取格式化的时间" aria-label="Permalink to &quot;获取格式化的时间&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localtime </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.asctime(time.localtime(time.time()))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;本地时间为 :&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, localtime</span></span></code></pre></div><h3 id="格式化日期" tabindex="-1">格式化日期 <a class="header-anchor" href="#格式化日期" aria-label="Permalink to &quot;格式化日期&quot;">​</a></h3><h3 id="格式化成2017-01-22-16-36-27形式" tabindex="-1">格式化成2017-01-22 16:36:27形式 <a class="header-anchor" href="#格式化成2017-01-22-16-36-27形式" aria-label="Permalink to &quot;格式化成2017-01-22 16:36:27形式&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.strftime(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%Y-%m-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %H:%M:%S&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, time.localtime())</span></span></code></pre></div><h3 id="格式化成sun-jan-22-16-36-27-2017形式" tabindex="-1">格式化成Sun Jan 22 16:36:27 2017形式 <a class="header-anchor" href="#格式化成sun-jan-22-16-36-27-2017形式" aria-label="Permalink to &quot;格式化成Sun Jan 22 16:36:27 2017形式&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.strftime(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> %b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> %d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %H:%M:%S %Y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, time.localtime())</span></span></code></pre></div><h3 id="将格式字符串转换为时间戳" tabindex="-1">将格式字符串转换为时间戳 <a class="header-anchor" href="#将格式字符串转换为时间戳" aria-label="Permalink to &quot;将格式字符串转换为时间戳&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Sat Mar 28 22:24:24 2016&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.mktime(time.strptime(a, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> %b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> %d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %H:%M:%S %Y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h3 id="获取某月日历" tabindex="-1">获取某月日历 <a class="header-anchor" href="#获取某月日历" aria-label="Permalink to &quot;获取某月日历&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> calendar.month(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2017</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;以下输出2016年1月份的日历:&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cal</span></span></code></pre></div><h2 id="datetime模块" tabindex="-1">datetime模块 <a class="header-anchor" href="#datetime模块" aria-label="Permalink to &quot;datetime模块&quot;">​</a></h2><h3 id="datetime类型时间" tabindex="-1">datetime类型时间 <a class="header-anchor" href="#datetime类型时间" aria-label="Permalink to &quot;datetime类型时间&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.datetime.now()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> now</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date time.datetime.now()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yes_time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> now </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date time.timedelta(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">days</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前一天的时间</span></span></code></pre></div><h3 id="datetime转string" tabindex="-1">datetime转string <a class="header-anchor" href="#datetime转string" aria-label="Permalink to &quot;datetime转string&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">strdatetime </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> now.strftime(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%Y-%m-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %H:%M:%S&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 以字符串形式显示时间，显示全部</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">strdatetime1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> now.strftime(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%Y-%m-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 以字符串形式显示时间，只显示日期</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strdatetime</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strdatetime1</span></span></code></pre></div><h3 id="string转datetime" tabindex="-1">string转datetime <a class="header-anchor" href="#string转datetime" aria-label="Permalink to &quot;string转datetime&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datetime1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.datetime.strptime(strdatetime1, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%Y-%m-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime1</span></span></code></pre></div><h3 id="datetime转时间戳" tabindex="-1">datetime转时间戳 <a class="header-anchor" href="#datetime转时间戳" aria-label="Permalink to &quot;datetime转时间戳&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time_time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.mktime(datetime1.timetuple())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time_time</span></span></code></pre></div><h3 id="时间戳转string" tabindex="-1">时间戳转string <a class="header-anchor" href="#时间戳转string" aria-label="Permalink to &quot;时间戳转string&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.strftime(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%Y-%m-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,time.localtime(time_time))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time1</span></span></code></pre></div><h3 id="date转datetime" tabindex="-1">date转datetime <a class="header-anchor" href="#date转datetime" aria-label="Permalink to &quot;date转datetime&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2012</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">19</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.date.today()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.datetime.strptime(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date),</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%Y-%m-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#将date转换为str，在由str转换为datetime</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.datetime.strptime(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date1),</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%Y-%m-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#将date转换为str，在由str转换为datetime</span></span></code></pre></div>`,83),n=[e];function p(l,k,d,r,o,E){return a(),i("div",null,n)}const y=s(h,[["render",p]]);export{c as __pageData,y as default};
